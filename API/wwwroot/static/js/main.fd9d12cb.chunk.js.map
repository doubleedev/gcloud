{"version":3,"sources":["reportWebVitals.js","logo.svg","hoc/Layout/Layout.js","store/actions/actionTypes.js","axios.js","store/actions/users.js","components/Home.js","components/Users.js","App.js","store/reducers/users.js","shared/utility.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Layout","props","console","log","to","children","FETCH_USERS_START","FETCH_USERS_SUCCESS","FETCH_USERS_FAIL","GET_SOMETHING_START","GET_SOMETHING_SUCCESS","GET_SOMETHING_FAIL","process","instance","axios","create","baseURL","fetchUsers","dispatch","type","actionTypes","loading","error","get","res","fetchedUsers","key","data","push","id","users","catch","err","getSomething","something","Home","useDispatch","useSelector","state","onClick","actions","Users","map","u","name","withRouter","useEffect","document","documentElement","classList","add","buildType","path","exact","component","render","className","initialState","usersResponse","action","oldObject","updatedProperties","undefined","reducer","composeEnhancers","compose","rootReducers","combineReducers","usersReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.fd9d12cb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, } from 'react-router-dom'\r\n\r\nconst Layout = (props) => {\r\n\r\n    console.log(props)\r\n    return (\r\n        <main>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/\"\r\n                        >\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/users\"\r\n                        >\r\n                            Users\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n\r\n            </nav>\r\n            <section>\r\n                {props.children}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","export const FETCH_USERS_START = 'FETCH_USERS_START'\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\r\nexport const FETCH_USERS_FAIL = 'FETCH_USERS_FAIL'\r\n\r\nexport const GET_SOMETHING_START = 'GET_SOMETHING_START'\r\nexport const GET_SOMETHING_SUCCESS = 'GET_SOMETHING_SUCCESS'\r\nexport const GET_SOMETHING_FAIL = 'GET_SOMETHING_FAIL'\r\n","import axios from 'axios';\r\n\r\nconsole.log(process.env.REACT_APP_API_URL)\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport default instance;\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios'\r\n\r\nexport const fetchUsersStart = () => ({\r\n    type: actionTypes.FETCH_USERS_START,\r\n    loading: true,\r\n    error: null\r\n})\r\n\r\nexport const fetchUsersSuccess = (users) => ({\r\n    type: actionTypes.FETCH_USERS_SUCCESS,\r\n    loading: false,\r\n    users,\r\n    error: null\r\n})\r\n\r\nexport const fetchUsersFail = (error) => ({\r\n    type: actionTypes.FETCH_USERS_FAIL,\r\n    users: [],\r\n    loading: false,\r\n    error\r\n})\r\n\r\nexport const getSomethingStart = () => ({\r\n    type: actionTypes.GET_SOMETHING_START,\r\n    loading: true,\r\n    error: null\r\n})\r\n\r\nexport const getSomethingSuccess = something => ({\r\n    type: actionTypes.GET_SOMETHING_SUCCESS,\r\n    loading: false,\r\n    something,\r\n    error: null\r\n})\r\n\r\nexport const getSomethingFail = (error) => ({\r\n    type: actionTypes.GET_SOMETHING_FAIL,\r\n    something: '',\r\n    loading: false,\r\n    error\r\n})\r\n\r\nexport const fetchUsers = () => {\r\n\r\n    const url = '/users';\r\n\r\n    return (dispatch) => {\r\n        dispatch(fetchUsersStart())\r\n        axios\r\n            .get(url)\r\n            .then((res) => {\r\n                const fetchedUsers = []\r\n                for (let key in res.data) {\r\n                    fetchedUsers.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchUsersSuccess(fetchedUsers))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(fetchUsersFail(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const getSomething = () => {\r\n\r\n    const url = '/users/getsomething';\r\n\r\n    return (dispatch) => {\r\n        dispatch(getSomethingStart())\r\n        axios\r\n            .get(url)\r\n            .then((res) => {\r\n                dispatch(getSomethingSuccess(res.data))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(getSomethingFail(err))\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport * as actions from '../store/actions'\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const something = useSelector((state) => state.users.something)\r\n\r\n    const getUsers = () => {\r\n        console.log('get Something')\r\n        dispatch(actions.getSomething())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <p>Welcome</p>\r\n\r\n            <button onClick={getUsers}>Get something</button>\r\n            <h2>This is what I got: {something}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport * as actions from '../store/actions'\r\n\r\nconst Users = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const users = useSelector((state) => state.users.users)\r\n\r\n    const getUsers = () => {\r\n        console.log('get users')\r\n        dispatch(actions.fetchUsers())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            <button onClick={getUsers}>Fetch Users</button>\r\n            <ul>\r\n                {users.map(u => <li>{u.name}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport Layout from './hoc/Layout/Layout'\nimport Home from './components/Home';\nimport Users from './components/Users';\n\nconst App = (props) => {\n\n  useEffect(() => {\n    document.documentElement.classList.add(props.buildType);\n  }, [])\n\n  return (\n    <Layout buildType={props.buildType}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/home\" render={(props) => <Home {...props} />} />\n        <Route path=\"/users\" component={Users} />\n        <Redirect to=\"/\" />\n      </Switch>\n      <div className=\"devLabel\">{props.buildType}</div>\n    </Layout>\n  );\n}\n\nexport default withRouter(App);\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    something: ''\r\n}\r\n\r\nconst usersResponse = (state, action) =>\r\n    updateObject(state, {\r\n        users: action.users === undefined ? state.users : action.users,\r\n        something: action.something === undefined ? state.something : action.something\r\n    })\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_SOMETHING_START:\r\n        case actionTypes.GET_SOMETHING_SUCCESS:\r\n        case actionTypes.GET_SOMETHING_FAIL:\r\n        case actionTypes.FETCH_USERS_START:\r\n        case actionTypes.FETCH_USERS_SUCCESS:\r\n        case actionTypes.FETCH_USERS_FAIL:\r\n            return usersResponse(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport usersReducer from './store/reducers/users'\n\n/* eslint-disable-next-line no-undef*/\nconst buildType = process.env.REACT_APP_BUILD_TYPE;\n\nconsole.log(process.env);\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose\n\nconst rootReducers = combineReducers({\n  users: usersReducer\n})\n\nconst store = createStore(\n  rootReducers,\n  composeEnhancers(applyMiddleware(thunk))\n)\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App buildType={buildType} />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}